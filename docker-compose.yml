services:
  pipeline:
    image: python:3.11.9-slim
    container_name: inep-pipeline
    env_file:
      - ./.env
    environment:
      - DBT_PROFILES_DIR=/opt/app/dbt/profiles
    volumes:
      - ./:/opt/app
    working_dir: /opt/app
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
      apt-get update && \
      apt-get install -y gcc g++ libpq-dev && \
      pip install --upgrade pip && \
      pip install --no-cache-dir -r requirements.txt
      "

  dbt-cli:
    image: ghcr.io/dbt-labs/dbt-postgres:1.7.14
    container_name: dbt-cli
    env_file:
      - ./.env
    environment:
      - DBT_PROFILES_DIR=/opt/dbt/profiles
    volumes:
      - ./dbt:/opt/dbt
      - ./.env:/opt/dbt/.env:ro
    working_dir: /opt/dbt
    command: >
      bash -c "
      dbt deps && \
      dbt seed && \
      dbt run
      "
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17
    container_name: inep-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  default:
    name: inep-net

volumes:
  postgres_data: